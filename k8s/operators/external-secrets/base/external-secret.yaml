apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: hello-world
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: "SkipDryRunOnMissingResource=true"
spec:
  externalSecretName: "hello-world-es"
  namespaceSelector:
    matchLabels: 
      secrets: hello-world
  refreshTime: "15s" # How often this secret is synchronized
  externalSecretSpec:
    refreshInterval: "1h"
    secretStoreRef:
      name: example-secret-store
      kind: ClusterSecretStore
    target: # Our target Kubernetes Secret
      name: hello-world # If not present, then the secretKey field under data will be used
      creationPolicy: Owner # This will create the secret if it doesn't exist
    data:
      - secretKey: secret1
        remoteRef:
          key: secret1 # This is the remote key in the secret provider (might change in meaning based on your provider)